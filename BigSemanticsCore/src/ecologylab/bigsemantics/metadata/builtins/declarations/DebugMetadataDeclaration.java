package ecologylab.bigsemantics.metadata.builtins.declarations;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2014) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.metadata.Metadata;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.scalar.MetadataStringBuilder;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.StringBuilder;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class DebugMetadataDeclaration extends Metadata
{
	@simpl_scalar
	private MetadataStringBuilder newTermVector;

	public DebugMetadataDeclaration()
	{ super(); }

	public DebugMetadataDeclaration(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataStringBuilder	newTermVector()
	{
		MetadataStringBuilder	result = this.newTermVector;
		if (result == null)
		{
			result = new MetadataStringBuilder();
			this.newTermVector = result;
		}
		return result;
	}

	public StringBuilder getNewTermVector()
	{
		return this.newTermVector == null ? null : newTermVector().getValue();
	}

	public MetadataStringBuilder getNewTermVectorMetadata()
	{
		return newTermVector;
	}

	public void setNewTermVector(StringBuilder newTermVector)
	{
		if (newTermVector != null)
			this.newTermVector().setValue(newTermVector);
	}

	public void setNewTermVectorMetadata(MetadataStringBuilder newTermVector)
	{
		this.newTermVector = newTermVector;
	}
}
