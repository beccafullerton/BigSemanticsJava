package ecologylab.semantics.metadata.builtins.declarations;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2012) Interface Ecology Lab.
 */

import ecologylab.net.ParsedURL;
import ecologylab.semantics.metadata.Metadata;
import ecologylab.semantics.metadata.mm_name;
import ecologylab.semantics.metadata.scalar.MetadataParsedURL;
import ecologylab.semantics.metadata.scalar.MetadataString;
import ecologylab.semantics.metametadata.MetaMetadataCompositeField;
import ecologylab.serialization.annotations.Hint;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_composite_as_scalar;
import ecologylab.serialization.annotations.simpl_hints;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_other_tags;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;

/** 
 *The Document Class
 */ 
@simpl_inherit
public class DocumentDeclaration extends Metadata
{
	/** 
	 *The Title of the Document
	 */ 
	@simpl_scalar
	@simpl_hints({Hint.XML_LEAF})
	@simpl_composite_as_scalar
	private MetadataString title;

	/** 
	 *The document's actual location.
	 */ 
	@simpl_scalar
	private MetadataParsedURL location;

	@simpl_scalar
	@simpl_hints({Hint.XML_LEAF})
	@simpl_other_tags({"abstract_field"})
	private MetadataString description;

	/** 
	 *Relative location of a local copy of the document.
	 */ 
	@simpl_scalar
	private MetadataParsedURL localLocation;

	@simpl_collection("location")
	@mm_name("additional_locations")
	private List<MetadataParsedURL> additionalLocations;

	public DocumentDeclaration()
	{ super(); }

	public DocumentDeclaration(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	title()
	{
		MetadataString	result = this.title;
		if (result == null)
		{
			result = new MetadataString();
			this.title = result;
		}
		return result;
	}

	public String getTitle()
	{
		return this.title == null ? null : title().getValue();
	}

	public MetadataString getTitleMetadata()
	{
		return title;
	}

	public void setTitle(String title)
	{
		if (title != null)
			this.title().setValue(title);
	}

	public void setTitleMetadata(MetadataString title)
	{
		this.title = title;
	}

	public MetadataParsedURL	location()
	{
		MetadataParsedURL	result = this.location;
		if (result == null)
		{
			result = new MetadataParsedURL();
			this.location = result;
		}
		return result;
	}

	public ParsedURL getLocation()
	{
		return this.location == null ? null : location().getValue();
	}

	public MetadataParsedURL getLocationMetadata()
	{
		return location;
	}

	public void setLocation(ParsedURL location)
	{
		if (location != null)
			this.location().setValue(location);
	}

	public void setLocationMetadata(MetadataParsedURL location)
	{
		this.location = location;
	}

	public MetadataString	description()
	{
		MetadataString	result = this.description;
		if (result == null)
		{
			result = new MetadataString();
			this.description = result;
		}
		return result;
	}

	public String getDescription()
	{
		return this.description == null ? null : description().getValue();
	}

	public MetadataString getDescriptionMetadata()
	{
		return description;
	}

	public void setDescription(String description)
	{
		if (description != null)
			this.description().setValue(description);
	}

	public void setDescriptionMetadata(MetadataString description)
	{
		this.description = description;
	}

	public MetadataParsedURL	localLocation()
	{
		MetadataParsedURL	result = this.localLocation;
		if (result == null)
		{
			result = new MetadataParsedURL();
			this.localLocation = result;
		}
		return result;
	}

	public ParsedURL getLocalLocation()
	{
		return this.localLocation == null ? null : localLocation().getValue();
	}

	public MetadataParsedURL getLocalLocationMetadata()
	{
		return localLocation;
	}

	public void setLocalLocation(ParsedURL localLocation)
	{
		if (localLocation != null)
			this.localLocation().setValue(localLocation);
	}

	public void setLocalLocationMetadata(MetadataParsedURL localLocation)
	{
		this.localLocation = localLocation;
	}

	public List<MetadataParsedURL> getAdditionalLocations()
	{
		return additionalLocations;
	}

  // lazy evaluation:
  public List<MetadataParsedURL> additionalLocations()
  {
    if (additionalLocations == null)
      additionalLocations = new ArrayList<MetadataParsedURL>();
    return additionalLocations;
  }

  // addTo:
  public void addToAdditionalLocations(MetadataParsedURL element)
  {
    additionalLocations().add(element);
  }

  // size:
  public int additionalLocationsSize()
  {
    return additionalLocations == null ? 0 : additionalLocations.size();
  }

	public void setAdditionalLocations(List<MetadataParsedURL> additionalLocations)
	{
		this.additionalLocations = additionalLocations;
	}
}
